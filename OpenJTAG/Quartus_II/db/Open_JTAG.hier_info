|Open_JTAG
tck <= serializer:inst.tck
clk => clock_mux:inst1.clk
txe => serializer:inst.txe
rxf => serializer:inst.rxf
rst => serializer:inst.rst
tdo => serializer:inst.tdo
pwr => serializer:inst.pwr
db[0] <> serializer:inst.db[0]
db[1] <> serializer:inst.db[1]
db[2] <> serializer:inst.db[2]
db[3] <> serializer:inst.db[3]
db[4] <> serializer:inst.db[4]
db[5] <> serializer:inst.db[5]
db[6] <> serializer:inst.db[6]
db[7] <> serializer:inst.db[7]
wr <= serializer:inst.wr
rd <= serializer:inst.rd
tdi <= serializer:inst.tdi
trst <= serializer:inst.trst
wcks <= clock_mux:inst1.wcks
led1 <= serializer:inst.led1
led2 <= serializer:inst.led2
test <= serializer:inst.test
tms <= serializer:inst.tms


|Open_JTAG|serializer:inst
wcks => wr~reg0.CLK
wcks => db[0]~reg0.CLK
wcks => db[0]~en.CLK
wcks => db[1]~reg0.CLK
wcks => db[1]~en.CLK
wcks => db[2]~reg0.CLK
wcks => db[2]~en.CLK
wcks => db[3]~reg0.CLK
wcks => db[3]~en.CLK
wcks => db[4]~reg0.CLK
wcks => db[4]~en.CLK
wcks => db[5]~reg0.CLK
wcks => db[5]~en.CLK
wcks => db[6]~reg0.CLK
wcks => db[6]~en.CLK
wcks => db[7]~reg0.CLK
wcks => db[7]~en.CLK
wcks => tdo_in[0].CLK
wcks => tdo_in[1].CLK
wcks => tdo_in[2].CLK
wcks => tdo_in[3].CLK
wcks => tdo_in[4].CLK
wcks => tdo_in[5].CLK
wcks => tdo_in[6].CLK
wcks => tdo_in[7].CLK
wcks => ft_2nd.CLK
wcks => sm_tms.CLK
wcks => led2~reg0.CLK
wcks => led1~reg0.CLK
wcks => sm_msb.CLK
wcks => byte_count[0].CLK
wcks => byte_count[1].CLK
wcks => byte_count[2].CLK
wcks => byte_count[3].CLK
wcks => byte_count[4].CLK
wcks => byte_count[5].CLK
wcks => byte_count[6].CLK
wcks => byte_count[7].CLK
wcks => tap_nstate[0].CLK
wcks => tap_nstate[1].CLK
wcks => tap_nstate[2].CLK
wcks => tap_nstate[3].CLK
wcks => ft_byte[0].CLK
wcks => ft_byte[1].CLK
wcks => ft_byte[2].CLK
wcks => ft_byte[3].CLK
wcks => ft_byte[4].CLK
wcks => ft_byte[5].CLK
wcks => ft_byte[6].CLK
wcks => ft_byte[7].CLK
wcks => test~reg0.CLK
wcks => rd~reg0.CLK
wcks => tap_state[0].CLK
wcks => tap_state[1].CLK
wcks => tap_state[2].CLK
wcks => tap_state[3].CLK
wcks => tap_pos.CLK
wcks => tap_ok.CLK
wcks => ft_state[0].CLK
wcks => ft_state[1].CLK
wcks => ft_state[2].CLK
wcks => sm_state[0].CLK
wcks => sm_state[1].CLK
wcks => sm_state[2].CLK
wcks => sm_state[3].CLK
wcks => sm_state[4].CLK
wcks => cd[0]~reg0.CLK
wcks => cd[1]~reg0.CLK
wcks => cd[2]~reg0.CLK
wcks => trst~reg0.CLK
wcks => tdi~reg0.CLK
wcks => tck~reg0.CLK
wcks => tms~reg0.CLK
txe => sm_state.OUTPUTSELECT
txe => sm_state.OUTPUTSELECT
txe => sm_state.OUTPUTSELECT
txe => sm_state.OUTPUTSELECT
txe => sm_state.OUTPUTSELECT
txe => Mux3.IN31
rxf => ft_state.OUTPUTSELECT
rxf => ft_state.OUTPUTSELECT
rxf => ft_state.OUTPUTSELECT
wr <= wr~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd <= rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
db[0] <> db[0]
db[1] <> db[1]
db[2] <> db[2]
db[3] <> db[3]
db[4] <> db[4]
db[5] <> db[5]
db[6] <> db[6]
db[7] <> db[7]
rst => ft_state[0].ACLR
rst => ft_state[1].ACLR
rst => ft_state[2].ACLR
rst => sm_state[0].ACLR
rst => sm_state[1].ACLR
rst => sm_state[2].ACLR
rst => sm_state[3].ACLR
rst => sm_state[4].ACLR
rst => cd[0]~reg0.PRESET
rst => cd[1]~reg0.PRESET
rst => cd[2]~reg0.PRESET
rst => trst~reg0.PRESET
rst => tdi~reg0.ACLR
rst => tck~reg0.ACLR
rst => tms~reg0.ACLR
rst => db[2].IN1
rst => wr~reg0.ENA
rst => tap_ok.ENA
rst => tap_pos.ENA
rst => tap_state[3].ENA
rst => tap_state[2].ENA
rst => tap_state[1].ENA
rst => tap_state[0].ENA
rst => rd~reg0.ENA
rst => test~reg0.ENA
rst => ft_byte[7].ENA
rst => ft_byte[6].ENA
rst => ft_byte[5].ENA
rst => ft_byte[4].ENA
rst => ft_byte[3].ENA
rst => ft_byte[2].ENA
rst => ft_byte[1].ENA
rst => ft_byte[0].ENA
rst => tap_nstate[3].ENA
rst => tap_nstate[2].ENA
rst => tap_nstate[1].ENA
rst => tap_nstate[0].ENA
rst => byte_count[7].ENA
rst => byte_count[6].ENA
rst => byte_count[5].ENA
rst => byte_count[4].ENA
rst => byte_count[3].ENA
rst => byte_count[2].ENA
rst => byte_count[1].ENA
rst => byte_count[0].ENA
rst => sm_msb.ENA
rst => led1~reg0.ENA
rst => led2~reg0.ENA
rst => sm_tms.ENA
rst => ft_2nd.ENA
rst => tdo_in[7].ENA
rst => tdo_in[6].ENA
rst => tdo_in[5].ENA
rst => tdo_in[4].ENA
rst => tdo_in[3].ENA
rst => tdo_in[2].ENA
rst => tdo_in[1].ENA
rst => tdo_in[0].ENA
cd[0] <= cd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cd[1] <= cd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cd[2] <= cd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tck <= tck~reg0.DB_MAX_OUTPUT_PORT_TYPE
tms <= tms~reg0.DB_MAX_OUTPUT_PORT_TYPE
tdi <= tdi~reg0.DB_MAX_OUTPUT_PORT_TYPE
trst <= trst~reg0.DB_MAX_OUTPUT_PORT_TYPE
tdo => tdo_in.DATAA
tdo => tdo_in.DATAB
led1 <= led1~reg0.DB_MAX_OUTPUT_PORT_TYPE
led2 <= led2~reg0.DB_MAX_OUTPUT_PORT_TYPE
test <= test~reg0.DB_MAX_OUTPUT_PORT_TYPE
pwr => Mux39.IN0


|Open_JTAG|clock_mux:inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => cclk[0].CLK
clk => cclk[1].CLK
clk => cclk[2].CLK
clk => cclk[3].CLK
clk => cclk[4].CLK
clk => cclk[5].CLK
clk => cclk[6].CLK
clk => wcks~reg0.CLK
clk => wcks~reg0.ADATA
cks[0] => Add0.IN6
cks[0] => Equal0.IN2
cks[1] => Add0.IN5
cks[1] => Equal0.IN1
cks[2] => Add0.IN4
cks[2] => Equal0.IN0
wcks <= wcks~reg0.DB_MAX_OUTPUT_PORT_TYPE


